In [2]:
import os
In [3]:
mypath= 'flowers/'
In [4]:
file_name = []
tag = []
full_path = []
for path, subdirs, files in os.walk(mypath):
    for name in files:
        full_path.append(os.path.join(path, name)) 
        tag.append(path.split('/')[-1])        
        file_name.append(name)
In [6]:
import pandas as pd
In [39]:

df = pd.DataFrame({"path":full_path,'file_name':file_name,"tag":tag})
df.groupby(['tag']).size()
Out[39]:
tag
daisy        1538
dandelion    2110
rose         1568
sunflower    1468
tulip        1968
dtype: int64
In [40]:
#cek sample datanya
df.head()
Out[40]:
path	file_name	tag
0	flowers/daisy/100080576_f52e8ee070_n.jpg	100080576_f52e8ee070_n.jpg	daisy
1	flowers/daisy/10140303196_b88d3d6cec.jpg	10140303196_b88d3d6cec.jpg	daisy
2	flowers/daisy/10172379554_b296050f82_n.jpg	10172379554_b296050f82_n.jpg	daisy
3	flowers/daisy/10172567486_2748826a8b.jpg	10172567486_2748826a8b.jpg	daisy
4	flowers/daisy/10172636503_21bededa75_n.jpg	10172636503_21bededa75_n.jpg	daisy
Train test split
In [41]:
#load library untuk train test split
from sklearn.model_selection import train_test_split
In [46]:
#variabel yang digunakan pada pemisahan data ini
X= df['path']
y= df['tag']
In [47]:
# split dataset awal menjadi data train dan test
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.20, random_state=300)
In [48]:
# kemudian data test dibagi menjadi 2 sehingga menjadi data test dan data validation.
X_test, X_val, y_test, y_val = train_test_split(
    X_test, y_test, test_size=0.5, random_state=100)
In [59]:
# menyatukan kedalam masing-masing dataframe

df_tr = pd.DataFrame({'path':X_train
              ,'tag':y_train
             ,'set':'train'})

df_te = pd.DataFrame({'path':X_test
              ,'tag':y_test
             ,'set':'test'})

df_val = pd.DataFrame({'path':X_val
              ,'tag':y_val
             ,'set':'validation'})
In [60]:
print('train size', len(df_tr))
print('val size', len(df_te))
print('test size', len(df_val))
train size 6921
val size 865
test size 866
In [91]:
# melihat proporsi pada masing masing set apakah sudah ok atau masih ada yang ingin diubah
df_all = df_tr.append([df_te,df_val]).reset_index(drop=1)\

print('===================================================== \n')
print(df_all.groupby(['set','tag']).size(),'\n')

print('===================================================== \n')

#cek sample datanya
df_all.sample(3)
===================================================== 

set         tag      
test        daisy         157
            dandelion     212
            rose          176
            sunflower     135
            tulip         185
train       daisy        1223
            dandelion    1683
            rose         1232
            sunflower    1189
            tulip        1594
validation  daisy         158
            dandelion     215
            rose          160
            sunflower     144
            tulip         189
dtype: int64 

===================================================== 

Out[91]:
path	tag	set
6386	flowers/dandelion/34578947551_863af3acb3_n.jpg	dandelion	train
648	flowers/flowers/tulip/7166612682_711e680027_n.jpg	tulip	train
7109	flowers/flowers/daisy/5794835_d15905c7c8_n.jpg	daisy	test
Merapihkan ke folder set masing-masing
In [92]:

In [93]:
import shutil
from tqdm.notebook import tqdm as tq
In [94]:
datasource_path = "flowers/"
dataset_path = "dataset/"
In [95]:
for index, row in tq(df_all.iterrows()):
    
    #detect filepath
    file_path = row['path']
    if os.path.exists(file_path) == False:
            file_path = os.path.join(datasource_path,row['tag'],row['image'].split('.')[0])            
    
    #make folder destination dirs
    if os.path.exists(os.path.join(dataset_path,row['set'],row['tag'])) == False:
        os.makedirs(os.path.join(dataset_path,row['set'],row['tag']))
    
    #define file dest
    destination_file_name = file_path.split('/')[-1]
    file_dest = os.path.join(dataset_path,row['set'],row['tag'],destination_file_name)
    
    #copy file from source to dest
    if os.path.exists(file_dest) == False:
        shutil.copy2(file_path,file_dest)
HBox(children=(FloatProgress(value=1.0, bar_style='info', max=1.0), HTML(value='')))
